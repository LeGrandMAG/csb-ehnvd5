{"version":3,"sources":["meme.png","component/Navbar.js","component/Box.js","component/boxes.js","component/Joke.js","data/jokeData.js","App.js","index.js"],"names":["Navbar","className","alt","src","meme","Box","props","styles","border","borderRadius","width","height","display","margin","justifyContent","background","on","onClick","toggle","id","style","Joke","useState","isShown","setIsShown","setup","punchline","prevShown","Page","boxes","squares","setSquares","messages","jokeData","map","joke","prev","x","square","length","rootElement","document","getElementById","createRoot","render"],"mappings":"4MAAe,G,MAAA,IAA0B,kC,OCc1BA,MAXf,WACE,OACE,qBAAKC,UAAU,UAAf,SACE,gCACE,qBAAKC,IAAI,OAAOC,IAAKC,IACrB,sD,MCOOC,MAff,SAAaC,GACX,IAAMC,EAAS,CACbC,OAAQ,kBACRC,aAAc,MACdC,MAAO,QACPC,OAAQ,QACRC,QAAS,eACTC,OAAQ,OACRC,eAAgB,SAChBC,WAAYT,EAAMU,GAAK,UAAY,eAGrC,OAAO,qBAAKC,QAAS,kBAAMX,EAAMY,OAAOZ,EAAMa,KAAKC,MAAOb,KCZ7C,GACb,CACEY,GAAI,EACJH,IAAI,GAEN,CACEG,GAAI,EACJH,IAAI,GAEN,CACEG,GAAI,EACJH,IAAI,GAEN,CACEG,GAAI,EACJH,IAAI,GAEN,CACEG,GAAI,EACJH,IAAI,GAEN,CACEG,GAAI,EACJH,IAAI,ICrBO,SAASK,EAAKf,GAC3B,MAA8BgB,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OACE,sBAAKvB,UAAU,iBAAf,UACGK,EAAMmB,OAAS,6BAAKnB,EAAMmB,QAC1BF,GAAW,4BAAIjB,EAAMoB,YACtB,wBAAQT,QARZ,WAEEO,GAAW,SAACG,GAAD,OAAgBA,MAMzB,SACGJ,EAAU,iBAAmB,mBAEhC,0BChBS,OACb,CACEJ,GAAI,EACJM,MAAO,+CACPC,UAAW,4DAEb,CACEP,GAAI,EACJM,MAAO,wCACPC,UAAW,uBAEb,CACEP,GAAI,EACJM,MAAO,8CACPC,UAAW,WAEb,CACEP,GAAI,EACJM,MAAO,8CACPC,UAAW,UAEb,CACEP,GAAI,EACJM,MAAO,2CACPC,UAAW,8CCdA,SAASE,IACtB,MAA8BN,mBAASO,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCT,mBAAS,CAAC,IAAK,MAA/C,mBAAOU,EAAP,UAEqBC,EAASC,KAAI,SAACC,GAAD,OAChC,cAACd,EAAD,CAAoBI,MAAOU,EAAKV,MAAOC,UAAWS,EAAKT,WAA5CS,EAAKhB,OAElB,SAASD,EAAOC,GAGdY,GAAW,SAACK,GAIV,OAHmBA,EAAKF,KAAI,SAACG,GAC3B,OAAOA,EAAElB,KAAOA,EAAT,2BAAmBkB,GAAnB,IAAsBrB,IAAKqB,EAAErB,KAAOqB,QAM1BP,EAAQI,KAAI,SAACI,GAAD,OACjC,cAAC,EAAD,CAAKpB,OAAQA,EAAwBF,GAAIsB,EAAOtB,GAAIG,GAAImB,EAAOnB,IAArCmB,EAAOnB,OAGnC,OACE,sBAAKlB,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,+EAEF,sBAAKA,UAAU,KAAf,UACE,cAAC,EAAD,IACA,6BACG+B,EAASO,OAAS,EAAlB,mBACeP,EAASO,OADxB,YAEyB,IAApBP,EAASO,OAAe,UAAY,WAFzC,KAIG,iCCvCd,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,EAAD,S","file":"static/js/main.6de34a0f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/meme.4ffa18b6.png\";","/* Nav bar for the meme generator */\r\nimport meme from \"../../src/meme.png\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"nav-bar\">\r\n      <div>\r\n        <img alt=\"meme\" src={meme} />\r\n        <h2>Meme Generator</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","function Box(props) {\r\n  const styles = {\r\n    border: \"1px solid black\",\r\n    borderRadius: \"3px\",\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n    display: \"inline-block\",\r\n    margin: \"10px\",\r\n    justifyContent: \"center\",\r\n    background: props.on ? \"#222222\" : \"transparent\"\r\n  };\r\n\r\n  return <div onClick={() => props.toggle(props.id)} style={styles}></div>;\r\n}\r\n\r\nexport default Box;\r\n","export default [\r\n  {\r\n    id: 1,\r\n    on: true\r\n  },\r\n  {\r\n    id: 2,\r\n    on: false\r\n  },\r\n  {\r\n    id: 3,\r\n    on: true\r\n  },\r\n  {\r\n    id: 4,\r\n    on: true\r\n  },\r\n  {\r\n    id: 5,\r\n    on: false\r\n  },\r\n  {\r\n    id: 6,\r\n    on: false\r\n  }\r\n];\r\n","import { useState } from \"react\";\r\n/*This is a component that shows and hide bunchline jokes */\r\nexport default function Joke(props) {\r\n  const [isShown, setIsShown] = useState(false);\r\n\r\n  function toggleShown() {\r\n    /*toggleShown*/\r\n    setIsShown((prevShown) => !prevShown);\r\n  }\r\n  return (\r\n    <div className=\"joke-container\">\r\n      {props.setup && <h3>{props.setup}</h3>}\r\n      {isShown && <p>{props.punchline}</p>}\r\n      <button onClick={toggleShown}>\r\n        {isShown ? \"Hide Punchline\" : \"Show Punchline\"}\r\n      </button>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n","export default [\r\n  {\r\n    id: 1,\r\n    setup: \"I got my daughter a fridge for her birthday.\",\r\n    punchline: \"I can't wait to see her face light up when she opens it.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    setup: \"How did the hacker escape the police?\",\r\n    punchline: \"He just ransomware!\"\r\n  },\r\n  {\r\n    id: 3,\r\n    setup: \"Why don't pirates travel on mountain roads?\",\r\n    punchline: \"Scurvy.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    setup: \"Why do bees stay in the hive in the winter?\",\r\n    punchline: \"Swarm.\"\r\n  },\r\n  {\r\n    id: 5,\r\n    setup: \"What's the best thing about Switzerland?\",\r\n    punchline: \"I don't know, but the flag is a big plus!\"\r\n  }\r\n];\r\n","import \"./css/styles.css\";\nimport Navbar from \"./component/Navbar\";\nimport Meme from \"./component/Meme\";\nimport Count from \"./component/Count\";\nimport { useState } from \"react\";\nimport Box from \"./component/Box\";\nimport boxes from \"./component/boxes\";\nimport Joke from \"./component/Joke\";\nimport jokeData from \"./data/jokeData\";\n\nexport default function Page() {\n  const [squares, setSquares] = useState(boxes);\n  const [messages, setMessages] = useState([\"1\", \"2\"]);\n  /* The jokeElements displays a list of joke and their punclines.*/\n  const jokeElements = jokeData.map((joke) => (\n    <Joke key={joke.id} setup={joke.setup} punchline={joke.punchline} />\n  ));\n  function toggle(id) {\n    /*The toggle function will toggle the box on and off */\n\n    setSquares((prev) => {\n      const newSquares = prev.map((x) => {\n        return x.id === id ? { ...x, on: !x.on } : x;\n      });\n      return newSquares;\n    });\n  }\n  /* This variable will return a list of box components. */\n  const squareElements = squares.map((square) => (\n    <Box toggle={toggle} key={square.id} on={square.on} id={square.id} />\n  ));\n\n  return (\n    <div className=\"oss\">\n      <div className=\"warning\">\n        <p>This website is only visible from a computer</p>\n      </div>\n      <div className=\"bg\">\n        <Navbar />\n        <h2>\n          {messages.length > 0\n            ? `You have ${messages.length} ${\n                messages.length === 1 ? \"message\" : \"messages\"\n              }.`\n            : \"You are all caught up.\"}\n        </h2>\n        {/*<Meme />*/}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}